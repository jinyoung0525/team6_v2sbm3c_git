<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="dev.mvc.album.AlbumDAOInter"> 
  <insert id="create" parameterType="dev.mvc.album.AlbumVO">
    <selectKey keyProperty="albumno" resultType="int" order="BEFORE">
      SELECT album_seq.nextval FROM dual
    </selectKey>
    
     INSERT INTO album(albumno, title, kind, release, genre, enter, likey, intro, detail, fname, thumb, fupname, fsize,artistno,word)
     VALUES(#{albumno}, #{title}, #{kind}, #{release}, #{genre}, #{enter}, #{likey}, #{intro}, #{detail}, #{fname}, #{thumb}, #{fupname}, #{fsize}, #{artistno}, #{word})
  </insert>
  
  <insert id="create_join" parameterType="dev.mvc.album.AlbumVO">
    <selectKey keyProperty="albumno" resultType="int" order="BEFORE">
      SELECT album_seq.nextval FROM dual
    </selectKey>
    
     INSERT INTO album(albumno, title, kind, release, genre, enter, likey, intro, detail, fname, thumb, fupname, fsize,artistno,word)
     VALUES(#{albumno}, #{title}, #{kind}, #{release}, #{genre}, #{enter}, #{likey}, #{intro}, #{detail}, #{fname}, #{thumb}, #{fupname}, #{fsize}, #{artistno}, #{word})
  </insert>
  
  <!-- artistno 별 목록 -->
  <select id="list_by_artistno" resultType="dev.mvc.album.AlbumVO" parameterType="int">
    SELECT albumno, title, kind, release, genre, enter, likey, intro, detail, fname, thumb, fupname, fsize, artistno
    FROM album
    WHERE artistno = #{artistno}
    ORDER BY albumno DESC
  </select>
  
  <!-- Categrp + Cate join, 연결 목록 -->
  <select id="list_all_join" resultType="dev.mvc.album.AlbumVO">
    SELECT r.artistno as r_artistno, r.name as r_name,
           c.albumno, c.artistno, c.title, c.kind, c.release, c.genre, c.enter, c.likey, c.intro, c.detail, c.fname, c.thumb, c.fupname, c.fsize
    FROM artist r, album c
    WHERE r.artistno = c.artistno
    ORDER BY artistno ASC, albumno ASC
  </select>
  
  <!-- 카테고리별 검색 목록 -->
  <select id="list_by_artistno_search" resultType="dev.mvc.album.AlbumVO" 
             parameterType="HashMap">
    SELECT albumno, title, kind, release, genre, enter, likey, intro, detail, fname, thumb, fupname, fsize,artistno
    FROM album
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
        WHERE artistno=#{artistno}
      </when>
      <otherwise> <!-- 검색하는 경우 -->
        WHERE word LIKE '%' || #{word} || '%'
        OR title LIKE '%' || #{word} || '%' 
        OR kind LIKE '%' || #{word} || '%'
        OR release LIKE '%' || #{word} || '%'
        OR genre LIKE '%' || #{word} || '%'
        OR enter LIKE '%' || #{word} || '%'
        OR detail LIKE '%' || #{word} || '%'
                                                     
      </otherwise>
    </choose>
    ORDER BY albumno DESC   
  </select>
   
  <!-- 카테고리별 검색 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM album
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
        WHERE artistno=#{artistno}
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
       WHERE word LIKE '%' || #{word} || '%'
        OR title LIKE '%' || #{word} || '%' 
        OR kind LIKE '%' || #{word} || '%'
        OR release LIKE '%' || #{word} || '%'
        OR genre LIKE '%' || #{word} || '%'
        OR enter LIKE '%' || #{word} || '%'
        OR detail LIKE '%' || #{word} || '%'
      </otherwise>
    </choose>
  </select>
  
  <!-- 카테고리별 검색 목록 + 페이징 + 메인 이미지 -->   
  <select id="list_by_artistno_search_paging" 
             resultType="dev.mvc.album.AlbumVO" parameterType="HashMap">
   SELECT albumno, title, kind, release, genre, enter, likey, intro, detail, fname, thumb, fupname, fsize, artistno, r
   FROM (
           SELECT albumno, title, kind, release, genre, enter, likey, intro, detail, fname, thumb, fupname, fsize, artistno, rownum as r
           FROM (
                     SELECT albumno, title, kind, release, genre, enter, likey, intro, detail, fname, thumb, fupname, fsize, artistno
                     FROM album
                        <choose>
                          <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
                             WHERE artistno=#{artistno}
                          </when>
                          <otherwise>
                            WHERE word LIKE '%' || #{word} || '%'
                            OR title LIKE '%' || #{word} || '%' 
                            OR kind LIKE '%' || #{word} || '%'
                            OR release LIKE '%' || #{word} || '%'
                            OR genre LIKE '%' || #{word} || '%'
                            OR enter LIKE '%' || #{word} || '%'
                            OR detail LIKE '%' || #{word} || '%'
                          </otherwise>
                        </choose>
                        ORDER BY albumno DESC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     
<!--  1 page: WHERE r >= 1 AND r <= 10; 
       2 page: WHERE r >= 11 AND r <= 20;
       3 page: WHERE r >= 21 AND r <= 30; -->
     
  </select>
  
  <!-- 일반적인 조회 -->
  <select id="read" resultType="dev.mvc.album.AlbumVO" parameterType="int">
    SELECT albumno, title, kind, release, genre, enter, likey, intro, detail, fname, thumb, fupname, fsize,artistno
    FROM album
    WHERE albumno=#{albumno}
  </select>
  
  <!-- 수정 -->
  <update id="update_album" parameterType="dev.mvc.album.AlbumVO">
    UPDATE album
    SET artistno=#{artistno}, title=#{title}, kind=#{kind}, release=#{release}, genre=#{genre}, enter=#{enter}, 
          intro=#{intro}, detail=#{detail}, fname=#{fname}, thumb=#{thumb}, fupname=#{fupname}, fsize=#{fsize}
    WHERE albumno = #{albumno}
  </update>
  
   <!-- 삭제 -->
  <delete id="delete" parameterType="int">
    DELETE FROM album
    WHERE albumno=#{albumno}
  </delete>
  
  <!-- 추천 -->
  <update id="update_likey" parameterType="int">
    UPDATE album
    SET likey = likey + 1
    WHERE albumno = #{albumno}
  </update>
  
  
  
 </mapper>